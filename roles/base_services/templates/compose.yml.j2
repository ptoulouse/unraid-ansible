---
#
# {{ base_services_stack_description }}
#
services:

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: unless-stopped
    environment:
      CF_API_TOKEN: {{ cloudflare_api_token }}
      DOMAINS: {{ domain_name }}
      IP6_PROVIDER: none
      PROXIED: "true"
      TZ: {{ timezone }}
    user: "99:100"
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - all
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.icon: {{ homarr_labs_icons_url }}/cloudflare.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash

  mail-relay:
    image: juanluisbaptiste/postfix:latest
    container_name: mail-relay
    restart: unless-stopped
    networks:
      - mail-relay
    environment:
      SMTP_SERVER: {{ smtp_server }}
      SMTP_PORT: {{ smtp_port }}
      SMTP_USERNAME: {{ smtp_username }}
      SMTP_PASSWORD: {{ smtp_password }}
      SERVER_HOSTNAME: {{ server_name }}.{{ domain_name }}
      TZ: {{ timezone }}
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.icon: {{ unraid_ansible_icons_url }}/mail-relay.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash

  lldap:
    image: lldap/lldap:stable
    container_name: lldap
    restart: unless-stopped
    networks:
      - traefik
    environment:
      UID: "99"
      GID: "100"
      TZ: {{ timezone }}
      LLDAP_JWT_SECRET: "{{ lldap_jwt_secret }}"
      LLDAP_LDAP_BASE_DN: {{ lldap_base_dn }}
      LLDAP_LDAP_USER_PASS: "{{ lldap_admin_password }}"
    volumes:
      - {{ base_services_data_path }}/lldap_config:/data
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.managed: composeman
      net.unraid.docker.icon: {{ unraid_ansible_icons_url }}/ldap.png
      net.unraid.docker.webui: https://lldap.{{ domain_name }}
      net.unraid.docker.shell: bash
      traefik.enable: "true"
      traefik.http.routers.lldap.entrypoints: https
      traefik.http.routers.lldap.middlewares: auth-chain@file
      traefik.http.routers.lldap.rule: Host(`lldap.{{ domain_name }}`)
      traefik.http.routers.lldap.service: lldap
      traefik.http.services.lldap.loadbalancer.server.port: 17170

  rest-server:
    image: restic/rest-server:latest
    container_name: rest-server
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - {{ backup_path }}/restic:/data
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    environment:
      TZ: {{ timezone }}
    user: "99:100"
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.icon: {{ unraid_ansible_icons_url }}/restic-rest-server.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: sh

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    networks:
      - mail-relay
    ports:
      - "{{ watchtower_port | default('8080') }}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: {{ timezone }}
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_HTTP_API_METRICS: "true"
      WATCHTOWER_HTTP_API_TOKEN: {{ watchtower_api_token }}
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NOTIFICATIONS: email
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: "Watchtower {{ server_name }} <{{ smtp_mail_from }}>"
      WATCHTOWER_NOTIFICATION_EMAIL_TO: "{{ admin_email }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: mail-relay
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: 25
      WATCHTOWER_NOTIFICATION_EMAIL_SUBJECTTAG: {{ server_name }}
      WATCHTOWER_SCHEDULE: "0 0 6 * * *"
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.managed: composeman
      net.unraid.docker.icon: {{ homarr_labs_icons_url }}/watchtower.png

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    restart: unless-stopped
    networks:
      - mail-relay
      - traefik
    ports:
      - "9091:9091"
    volumes:
      - {{ base_services_data_path }}/authelia_config:/config
    environment:
      PUID: "99"
      PGID: "100"
      TZ: {{ timezone}}
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.icon: {{ homarr_labs_icons_url }}/authelia.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: sh
      net.unraid.docker.webui: https://auth.{{ domain_name }}
      traefik.enable: "true"
      traefik.http.routers.authelia.entrypoints: https
      traefik.http.routers.authelia.middlewares: auth-chain@file
      traefik.http.routers.authelia.rule: Host(`auth.{{ domain_name }}`)
      traefik.http.routers.authelia.service: authelia
      traefik.http.services.authelia.loadbalancer.server.port: 9091

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - {{ base_services_data_path }}/traefik_config:/config
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      CF_DNS_API_TOKEN: {{ cloudflare_api_token }}
      DOMAIN_NAME: {{ domain_name }}
      TZ: {{ timezone }}
    command:
      - --configFile=/config/traefik.yml
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.managed: composeman
      net.unraid.docker.icon: {{ homarr_labs_icons_url }}/traefik.png
      net.unraid.docker.webui: https://traefik.{{ domain_name }}
      net.unraid.docker.shell: sh
      traefik.enable: "true"
      # HTTP to HTTPS Redirect
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.routers.http-catchall.entrypoints: http
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.routers.http-catchall.rule: HostRegexp(`{host:.+}`)
      # Traefik Dashboard
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.middlewares: auth-chain@file
      traefik.http.routers.traefik.rule: Host(`traefik.{{ domain_name }}`)
      traefik.http.routers.traefik.service: api@internal

  # Whoami - Simple test container. Prints HTTP requests.
  whoami:
    image: containous/whoami:latest
    container_name: whoami
    restart: unless-stopped
    networks:
      - traefik
    security_opt:
      - no-new-privileges:true
    labels:
      folder.view2: "Base Services"
      net.unraid.docker.managed: composeman
      net.unraid.docker.webui: https://whoami.{{ domain_name}}
      traefik.enable: "true"
      traefik.http.routers.whoami.entrypoints: https
      traefik.http.routers.whoami.middlewares: auth-chain@file
      traefik.http.routers.whoami.rule: Host(`whoami.{{ domain_name}}`)
      traefik.http.routers.whoami.service: whoami
      traefik.http.services.whoami.loadbalancer.server.port: 80

networks:
  mail-relay:
    external: true
  traefik:
    external: true
